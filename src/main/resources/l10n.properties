#Replayer
app.starting=Starting...\n
app.properties.jar=Loading default jar properties\n
app.usage=USAGE: java -jar replayer.jar [property_file]\nIf property_file argument is not provided, default property file "%s" will be used\nIf property_file argument is '-', standard input will be read\n
app.properties.loading=Loading property file "%1$s"\n
app.properties.error=Error with property file "%1$s"\n
app.properties.default=No property file specified, using default path "%1$s"\n
app.eu4dir.select=Select EU4 directory
app.eu4dir.error=No existing dir specified! Exiting...\n
app.closing=Closing...\n
app.properties.store=Storing settings to property file "%1$s"\n
app.properties.store.error=Error while storing settings to "%1$s"\n
#Localizator
locale.bundle.notfound=Localization resource "%1$s" not found!\n
locale.key.notfound=Localization string "%1$s" not found!\n
#Date
date.invalid.3=Invalid date: %1$s.%2$s.%3$s
date.invalid.1=Invalid date: %1$s
#Generator
generator.next.error=No next date!
generator.prev.error=No previous date!
generator.period.error=Cannot skip to Date outside the period!
#EventProcessor
event.nothing=nothing happened
#Mods
mod.error=Mod "%1$s" has no path nor archive!\n
#Province
province.log.id=ID
province.log.name=Name
province.log.controller=Controller
province.log.owner=Owner
province.log.religion=Religion
province.log.culture=Culture
#ReplayerController
replay.finishing=Finishing gameplay...
replay.fastforward.done=Fast forward done!
replay.jump.outside=Date outside save game!
replay.jump.parse.error=Cannot parse date!
replay.eu4save.select=Select EU4 save(s) to replay
replay.eu4save.ext=EU4 saves (*.eu4)
replay.map.init=Initializing map...
replay.world.init=Initializing world...
replay.progressing=Progressing to starting date...
replay.colonials.fix=Fixing colonial nations...
replay.save.loaded=Save game loaded
replay.tagchange.unknowntag=Unknown tag "%s" in tag changes!\n
replay.initializating=Initializing...\n
replay.log.clear=Clear log
replay.load.colonials=Loading colonial regions...\n
replay.load.countries=Loading countries...\n
replay.load.cultures=Loading cultures...\n
replay.load.data=Loading data:\n
replay.load.defines=Loading defines...\n
replay.map.load=Loading map...\n
replay.map.notfound=File map/provinces.bmp not found!\n
replay.map.unknowncolor=[%1$s,%2$s] Unknown color: 0x%3$x\n
replay.map.loaded=Map loaded\n
replay.provinces.load=Loading provinces...\n
replay.provinces.error=Provinces %1$s and %2$s share a color!
replay.provinces.notfound=File map/definition.csv not found!\n
replay.load.religions=Loading religions...\n
replay.load.seas=Loading seas...\n
replay.load.wastelands=Loading wastelands...\n
replay.direction.unknown=Invalid replay direction!
replay.jumping=Jumping to %s
replay.jumped=Jumped to %s
replay.cancel=Canceled!
#ProvinceEvent
event.province.Building=Building %1$s %2$s in province %3$s (%4$s)
event.province.Bulding.unknown=Unknown building type %1$s
event.province.Building.built=built
event.province.Building.destroyed=destroyed
event.province.Capital=Capital of province %1$s (%2$s) changed to %3$s
event.province.City=Colony in province %1$s (%2$s) grew to a city
event.province.Claim=Claim to province %2$s (%3$s) %4$#s country %1$s
event.province.Claim.added=added to
event.province.Claim.removed=removed from
event.province.ColonySize=Colony size of province %1$s (%2$s) changed to %3$s
event.province.Controller=Controller of province %1$s (%2$s) changed to %3$s
event.province.Core=Core to province %2$s (%3$s) %4$#s country %1$s
event.province.Core.added=added to
event.province.Core.removed=removed from
event.province.Culture=Culture of province %1$s (%2$s) changed to %3$s
event.province.Garrison=Garrison of province %1$s (%2$s) changed to %3$s
event.province.TradeGoods=Trade goods of province %1$s (%2$s) changed to %3$s
event.province.Hre=Province %1$s (%2$s) %3$#s HRE
event.province.Hre.unknown=Unknown hre type %1$s
event.province.Hre.added=added to
event.province.Hre.removed=removed from
event.province.Manpower=Manpower of province %1$s (%2$s) changed to %3$s
event.province.Name=Name of province %1$s (%2$s) changed to %3$s
event.province.NativeFerocity=Native ferocity of province %1$s (%2$s) changed to %3$s
event.province.NativeHostileness=Native hostileness of province %1$s (%2$s) changed to %3$s
event.province.NativeSize=Native size of province %1$s (%2$s) changed to %3$s
event.province.Owner=Owner of province %1$s (%2$s) changed to %3$s
event.province.Religion=Religion of province %1$s (%2$s) changed to %3$s
event.province.RevoltRisk=Revolt risk of province %1$s (%2$s) changed to %3$s
event.province.Tax=Base tax of province %1$s (%2$s) changed to %3$s
#Event
event.colonial=Country %1$s becomes colony of %2$s
event.defender=Religion %1$s got new defender %2$s
event.enablereligion=Religion %1$s enabled
event.freesubject=Country %1$s is no longer subject of %2$s
event.newemperor=HRE got new emperor %1$s (%2$s)
event.protectorate=Country %1$s becomes protectorate of %2$s
event.tagchange=Country %2$s changed tag to %1$s
event.technology=Technologies of country %1$s changed to %2$s, %3$s, %4$s
event.union=Country %1$s becomes junior partner in personal union with %2$s
event.vassal=Country %1$s becomes vassal of %2$s
#Parser
parser.token.expect.unknown=Expecting unknown token
parser.eof.unexpected=Unexpected end of file!
parser.token.invalid.expected.value=Invalid token "%1$s", expected %2$s
parser.token.invalid.expected.keyword=Invalid token "%1$s", expected "%2$s"
parser.exception=Encountered exception on line %1$d when processing token number %2$d:\n
parser.emperor.incomplete=Incomplete old_emperor!
parser.savegame=Parsing save game...
parser.savegame.error.currdate=Current date was not set!
parser.savegame.error.startdate=Starting date was not set!
parser.batch.init=Initializing save batch
parser.province.unknown=Unknown province with id="%1$s"!\n
#FXML
fxml.file=File
fxml.file.load=Load
fxml.file.close=Close
fxml.display=Display
fxml.display.zoom.in=Zoom In
fxml.display.zoom.out=Zoom Out
fxml.display.zoom.reset=Reset Zoom
fxml.mapmodes=Map Modes
fxml.mapmodes.political=Political
fxml.mapmodes.religious=Religious
fxml.mapmodes.cultural=Cultural
fxml.mapmodes.technology.combined=Technology (combined)
fxml.mapmodes.technology.separate=Technology (separate)
fxml.settings=Settings
fxml.settings.eu4dir=Change EU4 Directory
fxml.settings.pertick=Per Tick: 
fxml.settings.period.days=Days
fxml.settings.period.months=Months
fxml.settings.period.years=Years
fxml.settings.focus=Focus: 
fxml.settings.lang=*Language: 
fxml.settings.lang.hint=Change will take effect after restart
fxml.settings.borders=*Province borders
fxml.settings.subjects=*Subjects as overlords
fxml.settings.emergency=Emergency refresh
fxml.settings.events=Events
fxml.settings.events.tax=Base Tax
fxml.settings.events.building=Buildings
fxml.settings.events.capital=Capital
fxml.settings.events.city=City
fxml.settings.events.claim=Claim
fxml.settings.events.colonysize=Colony Size
fxml.settings.events.controller=Controller
fxml.settings.events.core=Core
fxml.settings.events.culture=Culture
fxml.settings.events.defender=Defender
fxml.settings.events.enablereligion=Enable Religion
fxml.settings.events.flag=Flag
fxml.settings.events.garrison=Garrison
fxml.settings.events.goods=Trade Goods
fxml.settings.events.hre=HRE
fxml.settings.events.manpower=Manpower
fxml.settings.events.name=Province Name
fxml.settings.events.native.ferocity=Native Ferocity
fxml.settings.events.native.hostileness=Native Hostileness
fxml.settings.events.native.size=Native Size
fxml.settings.events.newemperor=New Emperor
fxml.settings.events.owner=Owner
fxml.settings.events.religion=Religion
fxml.settings.events.revoltrisk=Revolt Risk
fxml.settings.events.technology=Technology
fxml.gif=Gif
fxml.gif.start=Start gif
fxml.gif.end=End gif
fxml.generator=RNW ModGenerator
fxml.generator.generate=Generate
fxml.hint.fastrewind=Fast rewind to start of save game
fxml.hint.back=Backplay
fxml.hint.pause=Pause
fxml.hint.play=Play
fxml.hint.finish=Finish savegame (with potential gif output)
fxml.hint.jump=Jump to specified date
fxml.hint.map=nothing
fxml.log.log=Log
fxml.log.province=Province
#Generator
generator.conflict=Province %1$s has color conflicting with sea or wasteland color!
generator.rnw=Restart the replayer without rnw.map set!
generator.done=Mod generated
